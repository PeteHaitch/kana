{"version":3,"file":"static/js/614.c0ac35ec.chunk.js","mappings":"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","sources":["workers/KanaDBHandler.js","workers/DownloadsDBHandler.js","workers/translate.js","workers/helpers.js","workers/scran.worker.js","../webpack/bootstrap","../webpack/runtime/chunk loaded","../webpack/runtime/compat get default export","../webpack/runtime/define property getters","../webpack/runtime/ensure chunk","../webpack/runtime/get javascript chunk filename","../webpack/runtime/get mini-css chunk filename","../webpack/runtime/global","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/make namespace object","../webpack/runtime/publicPath","../webpack/runtime/importScripts chunk loading","../webpack/runtime/startup chunk dependencies","../webpack/startup"],"sourcesContent":["var kanaDB;\nvar init = null;\n\nexport function initialize() {\n    init = new Promise(resolve => {\n        // initialize database on worker creation\n        kanaDB = indexedDB.open(\"KanaDB\", 2);\n\n        kanaDB.onupgradeneeded = (e) => {\n            var kanaDBClient = e.target.result;\n\n            // Currently purging all existing stores when the version is updated.\n            // At some point we may add a more sophisticated upgrade mechanism.\n            try {\n                kanaDBClient.deleteObjectStore(\"analysis\");\n            } catch (e) {}\n            try {\n                kanaDBClient.deleteObjectStore(\"analysis_meta\");\n            } catch (e) {}\n            try {\n                kanaDBClient.deleteObjectStore(\"file\");\n            } catch (e) {}\n            try {\n                kanaDBClient.deleteObjectStore(\"file_meta\");\n            } catch (e) {}\n\n            kanaDBClient.createObjectStore(\"analysis\", { keyPath: 'id' });\n            kanaDBClient.createObjectStore(\"analysis_meta\", { keyPath: 'id' });\n            kanaDBClient.createObjectStore(\"file\", { keyPath: 'id' });\n            kanaDBClient.createObjectStore(\"file_meta\", { keyPath: 'id' });\n        };\n\n        // Send existing stored analyses, if available.\n        kanaDB.onsuccess = () => {\n            getRecordsResolver(resolve);\n        };\n\n        kanaDB.onerror = () => {\n            resolve(null);\n        };\n    });\n\n    return init;\n}\n\nfunction getRecordsResolver(resolve, store = null) {\n    if (store === null) {\n        store = kanaDB.result\n            .transaction([\"analysis_meta\"], \"readonly\")\n            .objectStore(\"analysis_meta\")\n    }\n\n    var allAnalysis = store.getAll();\n\n    allAnalysis.onsuccess = function () {\n        let vals = allAnalysis.result;\n        vals.forEach(x => { delete x.files }); // no need to transfer that.\n        resolve(vals);\n    };\n    allAnalysis.onerror = function () {\n        resolve(null);\n    };\n}\n\n/** Helper functions **/\nasync function loadContent(id, store) {\n    return new Promise(resolve => {\n        let request = store.get(id);\n        request.onsuccess = function () {\n            if (request.result !== undefined) {\n                resolve(request.result);\n            } else {\n                resolve(null);\n            }\n        };\n        request.onerror = function () {\n            resolve(null);\n        };\n    });\n}\n\nfunction allOK(promises) {\n    return Promise.allSettled(promises)\n        .then(vals => {\n            for (const x of vals) {\n                if (!x) {\n                    return false;\n                }\n            }\n            return true;\n        });\n}\n\nexport async function getRecords() {\n    await init;\n    return new Promise(resolve => {\n        getRecordsResolver(resolve);\n    });\n}\n\n/** Functions to save content **/\nexport async function saveFile(id, buffer) {\n    await init;\n    let trans = kanaDB.result.transaction([\"file\", \"file_meta\"], \"readwrite\");\n    let file_store = trans.objectStore(\"file\");\n    let meta_store = trans.objectStore(\"file_meta\");\n\n    var meta = await loadContent(id, meta_store);\n    var refcount;\n    if (meta === null) {\n        refcount = 0;\n    } else {\n        refcount = meta[\"count\"];\n    }\n    refcount++;\n\n    var data_saving = new Promise(resolve => {\n        var putrequest = file_store.put({ \"id\": id, \"payload\": buffer });\n        putrequest.onsuccess = function (event) {\n            resolve(true);\n        };\n        putrequest.onerror = function (event) {\n            resolve(false);\n        };\n    });\n\n    var ref_saving = new Promise(resolve => {\n        meta.count = refcount;\n        var putrequest = meta_store.put(meta);\n        putrequest.onsuccess = function (event) {\n            resolve(true);\n        };\n        putrequest.onerror = function (event) {\n            resolve(false);\n        };\n    });\n\n    return allOK([data_saving, ref_saving])\n};\n\nexport async function saveAnalysis(id, state, files, title) { \n    await init;\n    let trans = kanaDB.result.transaction([\"analysis\", \"analysis_meta\"], \"readwrite\")\n    let analysis_store = trans.objectStore(\"analysis\");\n    let meta_store = trans.objectStore(\"analysis_meta\");\n\n    if (id == null) {\n        let already = await new Promise(resolve => getRecordsResolver(resolve, meta_store));\n        id = String(already.length);\n    }\n\n    var data_saving = new Promise(resolve => {\n        var putrequest = analysis_store.put({ \"id\": id, \"payload\": state });\n        putrequest.onsuccess = function (event) {\n            resolve(true);\n        };\n        putrequest.onerror = function (event) {\n            resolve(false);\n        };\n    });\n\n    var id_saving = new Promise(resolve => {\n        var putrequest = meta_store.put({ \"id\": id, \"files\": files, \"time\": Number(new Date()), \"title\": title });\n        putrequest.onsuccess = function (event) {\n            resolve(true);\n        };\n        putrequest.onerror = function (event) {\n            resolve(false);\n        };\n    });\n\n    if (await allOK([data_saving, id_saving])) {\n        return id;\n    } else {\n        return null;\n    }\n};\n\n/** Functions to load content **/\nexport async function loadFile(id) {\n    await init;\n    let file_store = kanaDB.result\n        .transaction([\"file\"], \"readonly\")\n        .objectStore(\"file\");\n\n    var meta = await loadContent(id, file_store);\n    return meta[\"payload\"];\n}\n\nexport async function loadAnalysis(id) {\n    await init;\n    let analysis_store = kanaDB.result\n        .transaction([\"analysis\"], \"readonly\")\n        .objectStore(\"analysis\");\n    var meta = await loadContent(id, analysis_store);\n    return meta[\"payload\"];\n}\n\n/** Functions to load content **/\nexport async function removeFile(id) {\n    await init;\n    let trans = kanaDB.result.transaction([\"file\", \"file_meta\"], \"readwrite\");\n    let file_store = trans.objectStore(\"file\");\n    let meta_store = trans.objectStore(\"file_meta\");\n\n    var meta = await loadContent(id, meta_store);\n    var refcount = meta[\"count\"];\n    refcount--;\n    var promises = [];\n\n    if (refcount == 0) {\n        promises.push(new Promise(resolve => {\n            let request = file_store.remove(id);\n            request.onerror = function (event) {\n                resolve(false);\n            };\n            request.onsuccess = function (event) {\n                resolve(true);\n            };\n        }));\n        promises.push(new Promise(resolve => {\n            let request = meta_store.delete(id);\n            request.onerror = function (event) {\n                resolve(false);\n            };\n            request.onsuccess = function (event) {\n                resolve(true);\n            };\n        }))\n    } else {\n        promises.push(new Promise(resolve => {\n            meta.count = refcount;\n            let request = meta_store.put(meta);\n            request.onsuccess = function (event) {\n                resolve(true);\n            };\n            request.onerror = function (event) {\n                resolve(false);\n            };\n        }));\n    }\n\n    return allOK(promises);\n}\n\nexport async function removeAnalysis(id) {\n    await init;\n    let trans = kanaDB.result.transaction([\"analysis\", \"analysis_meta\"], \"readwrite\")\n    let analysis_store = trans.objectStore(\"analysis\");\n    let meta_store = trans.objectStore(\"analysis_meta\");\n\n    var promises = [];\n\n    promises.push(new Promise(resolve => {\n        let request = analysis_store.delete(id);\n        request.onsuccess = function (event) {\n            resolve(true);\n        };\n        request.onerror = function (event) {\n            resolve(false);\n        };\n    }));\n\n    // Removing all files as well.\n    var meta = await loadContent(id, meta_store);\n    for (const f of meta[\"files\"]) {\n        promises.push(removeFile(f));\n    }\n\n    promises.push(new Promise(resolve => {\n        let request = meta_store.delete(id);\n        request.onsuccess = function (event) {\n            resolve(true);\n        };\n        request.onerror = function (event) {\n            resolve(false);\n        };\n    }));\n\n    return allOK(promises);\n}\n","var DownloadsDB;\nvar init = null;\n\nexport function initialize() {\n    if (init === null) {\n        init = new Promise((resolve, reject) => {\n            // initialize database on worker creation\n            DownloadsDB = indexedDB.open(\"DownloadsDB\", 3);\n\n            DownloadsDB.onupgradeneeded = (e) => {\n                var DownloadsDBClient = e.target.result;\n\n                // Currently purging all existing stores when the version is updated.\n                // At some point we may add a more sophisticated upgrade mechanism.\n                try {\n                    DownloadsDBClient.deleteObjectStore(\"downloads\");\n                } catch (e) {}\n\n                DownloadsDBClient.createObjectStore(\"downloads\", { keyPath: 'url' });\n            };\n\n            DownloadsDB.onsuccess = () => {\n                resolve(null);\n            };\n\n            DownloadsDB.onerror = () => {\n                reject(\"failed to initialize DownloadsDB\");\n            };\n        });\n    }\n\n    return init;\n}\n\nexport async function list() {\n    await init;\n    let trans = DownloadsDB.result.transaction([\"downloads\"], \"readonly\");\n    let download_store = trans.objectStore(\"downloads\");\n    return download_store.getAllKeys();\n}\n\nexport async function get(url, params = null, force = false) {\n    await init;\n\n    if (!force) {\n        let trans = DownloadsDB.result.transaction([\"downloads\"], \"readonly\");\n        let download_store = trans.objectStore(\"downloads\");\n        var data_check = new Promise(resolve => {\n            var already = download_store.get(url);\n            already.onsuccess = function (event) {\n                if (already.result !== undefined) {\n                    resolve(already.result.payload);\n                } else {\n                    resolve(null);\n                }\n            };\n            already.onerror = function (event) {\n                resolve(null);\n            };\n        });\n\n        var found = await data_check;\n        if (found !== null) {\n            return found;\n        }\n    }\n\n    var req;\n    if (params == null) {\n        req = fetch(url);\n    } else {\n        req = fetch(url, params);\n    }\n\n    var res = await req;\n    if (!res.ok) {\n        throw \"failed to download '\" + url + \"' (\" + res.status + \")\";\n    }\n    var buffer = await res.arrayBuffer();\n\n    // Technically, this isn't quite right, because we need to close the read\n    // transaction before opening the write transaction; multiple queries to\n    // the same URL from different workers could cause multiple downloads if\n    // they each miss each other's read check. But oh well; the auto-commit\n    // of IDB transactions means that it's hard to do any better. (Specifically,\n    // we can't do an async fetch while the transaction is still open, because\n    // it just closes before the fetch is done.)\n    let trans = DownloadsDB.result.transaction([\"downloads\"], \"readwrite\");\n    let download_store = trans.objectStore(\"downloads\");\n    var data_saving = new Promise(resolve => {\n        var putrequest = download_store.put({ \"url\": url, \"payload\": buffer });\n        putrequest.onsuccess = function (event) {\n            resolve(true);\n        };\n        putrequest.onerror = function (event) {\n            resolve(false);\n        };\n    });\n\n    let success = await data_saving;\n    if (!success) {\n        throw \"failed to download resources for '\" + url + \"'\";\n    }\n\n    return buffer;\n}\n\nexport async function remove(url) {\n    await init;\n    let trans = DownloadsDB.result.transaction([\"downloads\"], \"readwrite\")\n    let download_store = trans.objectStore(\"downloads\");\n\n    var removal = new Promise(resolve => {\n        let request = download_store.delete(url);\n        request.onsuccess = function (event) {\n            resolve(true);\n        };\n        request.onerror = function (event) {\n            resolve(false);\n        };\n    });\n\n    return await removal;\n}\n","/*****************************************************\n * This file is intended to be vendored into kanapi,\n * so you shouldn't add too many dependencies here. \n * The canonical version of the file is expected to \n * live at src/workers/translate.js in the kana repo.\n *****************************************************/\n\nimport * as bakana from \"bakana\";\n\nconst mappings = {\n    quality_control: {\n        use_mito_default: [ \"qc\", \"qc-usemitodefault\" ],\n        mito_prefix: [ \"qc\", \"qc-mito\" ],\n        nmads: [ \"qc\", \"qc-nmads\" ],\n        skip: [ \"qc\", \"skip\" ]\n    },\n    adt_quality_control: {\n        nmads: [ \"adt_qualitycontrol\", \"nmads\" ],\n        min_detected_drop: [ \"adt_qualitycontrol\", \"min_detected_drop\" ],\n        igg_prefix: [ \"adt_qualitycontrol\", \"igg_prefix\" ],\n        skip: [ \"adt_qualitycontrol\", \"skip\" ]\n    },\n    adt_normalization: {\n        num_pcs: [ \"adt_normalization\", \"num_pcs\" ],\n        num_clusters: [ \"adt_normalization\", \"num_clusters\" ]\n    },\n    feature_selection: {\n        span: [ \"fSelection\", \"fsel-span\" ]\n    },\n    pca: {\n        num_hvgs: [ \"pca\", \"pca-hvg\" ],\n        num_pcs: [ \"pca\", \"pca-npc\" ]\n    },\n    adt_pca: {\n        num_pcs: [ \"adt_pca\", \"num_pcs\" ]\n    },\n    combine_embeddings: {\n        weights: [ \"combine_embeddings\", \"weights\" ]\n    },\n    batch_correction: {\n        // method is handled by configureBatchCorrection.\n        num_neighbors: [ \"batch_correction\", \"num_neighbors\" ]\n    },\n    choose_clustering: {\n        method: [ \"cluster\", \"clus-method\" ]\n    },\n    // Neighbor indexing is handled by configureApproximateNeighbors.\n    tsne: {\n        perplexity: [ \"tsne\", \"tsne-perp\" ],\n        iterations: [ \"tsne\", \"tsne-iter\" ],\n        animate: [ \"tsne\", \"animate\" ]\n    },\n    umap: {\n        num_neighbors: [ \"umap\", \"umap-nn\" ],\n        num_epochs: [ \"umap\", \"umap-epochs\" ],\n        min_dist: [ \"umap\", \"umap-min_dist\" ],\n        animate: [ \"umap\", \"animate\" ]\n    },\n    kmeans_cluster: {\n        k: [ \"cluster\", \"kmeans-k\" ]\n    },\n    snn_graph_cluster: {\n        k: [ \"cluster\", \"clus-k\" ],\n        scheme: [ \"cluster\", \"clus-scheme\" ],\n        resolution: [ \"cluster\", \"clus-res\" ]\n    },\n    cell_labelling: {\n        human_references: [ \"annotateCells\", \"annotateCells-human_references\" ],\n        mouse_references: [ \"annotateCells\", \"annotateCells-mouse_references\" ]\n    }\n};\n\nexport function fromUI(inputs, params) {\n    let formatted = bakana.analysisDefaults();\n\n    // Replacing all 1:1 mappings. \n    let safeReplace = (step, par, value) => {\n        if (typeof value == \"undefined\") {\n            throw new Error(\"cannot assign undefined parameter to '\" + step + \".\" + par + \"'\");\n        }\n        if (!(step in formatted)) {\n            throw new Error(\"unknown analysis step '\" + step + \"'\");\n        }\n        let target = formatted[step];\n        if (!(par in target)) {\n            throw new Error(\"unknown analysis parameter '\" + par + \"' for step '\" + step + \"'\");\n        }\n        target[par] = value;\n    };\n\n    safeReplace(\"inputs\", \"sample_factor\", inputs.batch);\n    safeReplace(\"inputs\", \"subset\", inputs.subset);\n\n    for (const [step, spars] of Object.entries(mappings)) {\n        for (const [par, target] of Object.entries(spars)) {\n            safeReplace(step, par, params[target[0]][target[1]]);\n        }\n    }\n\n    // Special handling for multi-step parameters.\n    bakana.configureBatchCorrection(formatted, params.batch_correction[\"method\"]);\n    bakana.configureApproximateNeighbors(formatted, params.ann[\"approximate\"]);\n\n    // Simplify the combine_embeddings if we see it is all equal.\n    if (formatted.combine_embeddings.weights !== null) {\n        let uniq_weights = new Set(Object.values(formatted.combine_embeddings.weights));\n        if (uniq_weights.size <= 1) {\n            formatted.combine_embeddings.weights = null;\n        }\n    }\n\n    return formatted;\n}\n\nexport function toUI(params) {\n    // Setting all 1:1 mappings. \n    let safeExtract = (step, par) => {\n        if (!(step in params)) {\n            throw new Error(\"no available step '\" + step + \"' in the supplied parameters\");\n        }\n\n        let curstep = params[step];\n        if (!(par in curstep)) {\n            throw new Error(\"no available parameter '\" + par + \"' in step '\" + step + \"'\");\n        }\n\n        return curstep[par];\n    };\n\n    let reversed = {\n        inputs: {\n            \"batch\": safeExtract(\"inputs\", \"sample_factor\"),\n            \"subset\": safeExtract(\"inputs\", \"subset\")\n        }\n    };\n\n    for (const [step, spars] of Object.entries(mappings)) {\n        for (const [par, target] of Object.entries(spars)) {\n            if (!(target[0] in reversed)) {\n                reversed[target[0]] = {};\n            }\n            let currev = reversed[target[0]];\n            if (target[1] in currev) {\n                throw new Error(\"duplicate entry for parameter '\" + target[0] + \".\" + target[1] + \"'\");\n            }\n            currev[target[1]] = safeExtract(step, par);\n        }\n    }\n\n    // Mopping up the rest.\n    reversed.batch_correction.method = bakana.guessBatchCorrectionConfig(params);\n    reversed.ann = { approximate: bakana.guessApproximateNeighborsConfig(params) };\n\n    // Converting it into a dictionary for easier consumption by the UI.\n    if (reversed.combine_embeddings.weights === null) {\n        reversed.combine_embeddings.weights = {};\n    }\n\n    return reversed;\n}\n","export function extractBuffers(object, store) {\n    if (!object) {\n        return;\n    }\n\n    if (Array.isArray(object)) {\n        for (const element of object) {\n            extractBuffers(element, store);\n        }\n    } else if (object.constructor == Object) {\n        for (const [key, element] of Object.entries(object)) {\n            extractBuffers(element, store);\n        }\n    } else if (ArrayBuffer.isView(object)) {\n        if (!(object.buffer instanceof ArrayBuffer)) {\n            throw \"only ArrayBuffers should be in the message payload\";\n        }\n        store.push(object.buffer);\n    }\n}\n\nexport function postAttempt(step) {\n    postMessage({\n        type: `${step}_START`\n    });\n}\n\nexport function postSuccess(step, info) {\n    if (typeof info == \"undefined\") {\n        postMessage({\n            type: `${step}_CACHE`\n        });\n    } else {\n        var transferable = [];\n        extractBuffers(info, transferable);\n        postMessage({\n            type: `${step}_DATA`,\n            resp: info\n        }, transferable);\n    }\n}\n\nexport function postError(type, err, fatal) {\n    postMessage({\n        type: `${type}_ERROR`,\n        resp: {\n            reason: err.toString(),\n            fatal: fatal\n        },\n    });\n}\n\n\n","import * as bakana from \"bakana\";\nimport * as kana_db from \"./KanaDBHandler.js\";\nimport * as downloads from \"./DownloadsDBHandler.js\";\nimport * as hashwasm from \"hash-wasm\";\nimport * as translate from \"./translate.js\";\nimport { extractBuffers, postAttempt, postSuccess, postError } from \"./helpers.js\";\n\n/***************************************/\n\nlet superstate = null;\n\nbakana.setCellLabellingDownload(downloads.get);\n\nbakana.setVisualizationAnimate((type, x, y, iter) => {\n    postMessage({\n        type: type + \"_iter\",\n        x: x,\n        y: y,\n        iteration: iter\n    }, [x.buffer, y.buffer]);\n});\n\nfunction linkKanaDb(collected) {\n    return async (type, name, buffer) => {\n        var md5 = await hashwasm.md5(new Uint8Array(buffer));\n        var id = type + \"_\" + name + \"_\" + buffer.byteLength + \"_\" + md5;\n        var ok = await kana_db.saveFile(id, buffer);\n        if (!ok) {\n            throw \"failed to save file '\" + id + \"' to KanaDB\";\n        }\n        collected.push(id);\n        return id;\n    };\n}\n\nasync function serializeAllSteps(embedded) {\n    const h5path = \"serialized_in.h5\";\n    let collected = [];\n    let old = bakana.setCreateLink(linkKanaDb(collected));\n\n    let output;\n    try {\n        let collected = await bakana.saveAnalysis(superstate, h5path, { embedded: embedded });\n\n        if (embedded) {\n            output = bakana.createKanaFile(h5path, collected.collected);\n        } else {\n            output = {\n                state: bakana.createKanaFile(h5path, null),\n                files: collected\n            };\n        }\n    } finally {\n        bakana.removeHDF5File(h5path);\n        bakana.setCreateLink(old);\n    }\n\n    return output;\n}\n\nbakana.setResolveLink(kana_db.loadFile);\n\nasync function unserializeAllSteps(contents) {\n    const h5path = \"serialized_out.h5\";\n\n    let output;\n    try {\n        let loader = await bakana.parseKanaFile(contents, h5path);\n        let loaded_state = await bakana.loadAnalysis(h5path, loader, { finishFun: postSuccess });\n\n        if (superstate !== null) {\n            await bakana.freeAnalysis(superstate);\n        }\n        superstate = loaded_state;\n\n        output = {\n            \"parameters\": translate.toUI(bakana.retrieveParameters(superstate)),\n            \"other\": {\n                \"custom_selections\": superstate.custom_selections.fetchSelections()\n            }\n        };\n        console.log(output.other.custom_selections);\n\n    } finally {\n        bakana.removeHDF5File(h5path);\n    }\n\n    return output;\n}\n\n/***************************************/\n\nvar loaded;\nonmessage = function (msg) {\n    const { type, payload } = msg.data;\n\n    let fatal = false;\n    if (type == \"INIT\") {\n        fatal = true;\n        let nthreads = Math.round(navigator.hardwareConcurrency * 2 / 3);\n        let back_init = bakana.initialize({ numberOfThreads: nthreads });\n\n        let state_init = back_init\n            .then(() => {\n                return bakana.createAnalysis()\n            });\n\n        state_init\n            .then(x => {\n                superstate = x;\n                postMessage({\n                    type: type,\n                    msg: \"Success: analysis state created\"\n                });\n            });\n\n        let kana_init = kana_db.initialize();\n        kana_init\n            .then(result => {\n                if (result !== null) {\n                    postMessage({\n                        type: \"KanaDB_store\",\n                        resp: result,\n                        msg: \"Success: KanaDB initialized\"\n                    });\n                } else {\n                    console.error(error);\n                    postMessage({\n                        type: \"KanaDB_ERROR\",\n                        msg: \"Error: Cannot initialize KanaDB\"\n                    });\n                }\n            });\n\n        let down_init = downloads.initialize();\n        down_init\n            .then(result => {\n                postMessage({\n                    type: \"DownloadsDB_store\",\n                    resp: result,\n                    msg: \"Success: DownloadsDB initialized\"\n                });\n            })\n            .catch(error => {\n                console.error(error);\n                postMessage({\n                    type: \"DownloadsDB_ERROR\",\n                    msg: \"Error: Cannot initialize DownloadsDB\"\n                });\n            });\n\n\n        loaded = Promise.all([\n            back_init,\n            kana_init,\n            down_init,\n            state_init\n        ]);\n\n        loaded.then(() => {\n            postMessage({\n                type: type,\n                msg: \"Success: bakana initialized\"\n            });\n        }).catch(err => {\n            console.error(err);\n            postError(type, err, fatal)\n        });\n        /**************** RUNNING AN ANALYSIS *******************/\n    } else if (type == \"RUN\") {\n        fatal = true;\n        loaded\n            .then(x => {\n                let inputs = payload.inputs;\n                let formatted = translate.fromUI(inputs, payload.params);\n                bakana.runAnalysis(superstate, inputs.files, formatted, { startFun: postAttempt, finishFun: postSuccess })\n                    .catch(err => {\n                        console.error(err);\n                        postError(type, err, fatal)\n                    });\n            }).catch(err => {\n                console.error(err);\n                postError(type, err, fatal)\n            });\n        /**************** LOADING EXISTING ANALYSES *******************/\n    } else if (type == \"LOAD\") {\n        fatal = true;\n        let fs = payload.inputs.files;\n\n        if (fs[Object.keys(fs)[0]].format == \"kana\") {\n            let f = fs[Object.keys(fs)[0]].file;\n            loaded\n                .then(async (x) => {\n                    const reader = new FileReaderSync();\n                    let res = reader.readAsArrayBuffer(f);\n                    let params = await unserializeAllSteps(res);\n\n                    var transferrable = [];\n                    extractBuffers(params.other, transferrable);\n                    postMessage({\n                        type: \"loadedParameters\",\n                        resp: params\n                    }, transferrable);\n\n                }).catch(err => {\n                    console.error(err);\n                    postError(type, err, fatal)\n                });\n        } else if (fs[Object.keys(fs)[0]].format == \"kanadb\") {\n            var id = fs[Object.keys(fs)[0]].file;\n            kana_db.loadAnalysis(id)\n                .then(async (res) => {\n                    if (res == null) {\n                        postMessage({\n                            type: \"KanaDB_ERROR\",\n                            msg: `Fail: cannot load analysis ID '${id}'`\n                        });\n                    } else {\n                        let params = await unserializeAllSteps(res);\n\n                        var transferrable = [];\n                        extractBuffers(params.other, transferrable);\n                        postMessage({\n                            type: \"loadedParameters\",\n                            resp: params \n                        }, transferrable);\n                    }\n                }).catch(err => {\n                    console.error(err);\n                    postError(type, err, fatal)\n                });\n        }\n        /**************** SAVING EXISTING ANALYSES *******************/\n    } else if (type == \"EXPORT\") {\n        loaded\n            .then(async (x) => {\n                var contents = await serializeAllSteps(true);\n                postMessage({\n                    type: \"exportState\",\n                    resp: contents,\n                    msg: \"Success: application state exported\"\n                }, [contents]);\n            }).catch(err => {\n                console.error(err);\n                postError(type, err, fatal)\n            });\n\n    } else if (type == \"SAVEKDB\") { // save analysis to inbrowser indexedDB \n        var title = payload.title;\n        loaded\n            .then(async (x) => {\n                var contents = await serializeAllSteps(false);\n                let id = await kana_db.saveAnalysis(null, contents.state, contents.files, title);\n                if (id !== null) {\n                    let recs = await kana_db.getRecords();\n                    postMessage({\n                        type: \"KanaDB_store\",\n                        resp: recs,\n                        msg: `Success: Saved analysis to cache (${id})`\n                    });\n                } else {\n                    console.error(error);\n                    postMessage({\n                        type: \"KanaDB_ERROR\",\n                        msg: `Fail: Cannot save analysis to cache`\n                    });\n                }\n            }).catch(err => {\n                console.error(err);\n                postError(type, err, fatal)\n            });\n\n        /**************** KANADB EVENTS *******************/\n    } else if (type == \"REMOVEKDB\") { // remove a saved analysis\n        var id = payload.id;\n        kana_db.removeAnalysis(id)\n            .then(async (result) => {\n                if (result) {\n                    let recs = await kana_db.getRecords();\n                    postMessage({\n                        type: \"KanaDB_store\",\n                        resp: recs,\n                        msg: `Success: Removed file from cache (${id})`\n                    });\n                } else {\n                    console.error(error);\n                    postMessage({\n                        type: \"KanaDB_ERROR\",\n                        msg: `fail: cannot remove file from cache (${id})`\n                    });\n                }\n            }).catch(err => {\n                console.error(err);\n                postError(type, err, fatal)\n            });;\n\n    } else if (type == \"PREFLIGHT_INPUT\") {\n        loaded\n            .then(async x => {\n                let resp = {};\n                try {\n                    resp.status = \"SUCCESS\";\n                    resp.details = await bakana.validateAnnotations(payload.inputs.files);\n                } catch (e) {\n                    resp.status = \"ERROR\";\n                    resp.reason = e.toString();\n                }\n\n                postMessage({\n                    type: \"PREFLIGHT_INPUT_DATA\",\n                    resp: resp,\n                    msg: \"Success: PREFLIGHT_INPUT done\"\n                });\n            }).catch(err => {\n                console.error(err);\n                postError(type, err, fatal)\n            });\n\n        /**************** VERSUS MODE *******************/\n    } else if (type == \"computeVersusClusters\") {\n        loaded.then(x => {\n            let rank_type = payload.rank_type.replace(/-.*/, \"\"); // summary type doesn't matter for pairwise comparisons.\n            let res = superstate.marker_detection.computeVersus(payload.left, payload.right, rank_type, payload.modality);\n            postMessage({\n                type: \"computeVersusClusters\",\n                resp: res,\n                msg: \"Success: COMPUTE_VERSUS_CLUSTERS done\"\n            });\n        }).catch(err => {\n            console.error(err);\n            postError(type, err, fatal)\n        });\n\n    } else if (type == \"computeVersusSelections\") {\n        loaded.then(x => {\n            let rank_type = payload.rank_type.replace(/-.*/, \"\"); // summary type doesn't matter for pairwise comparisons.\n            let res = superstate.custom_selections.computeVersus(payload.left, payload.right, rank_type, payload.modality);\n            postMessage({\n                type: \"computeVersusSelections\",\n                resp: res,\n                msg: \"Success: COMPUTE_VERSUS_SELECTIONS done\"\n            });\n        }).catch(err => {\n            console.error(err);\n            postError(type, err, fatal)\n        });\n\n        /**************** OTHER EVENTS FROM UI *******************/\n    } else if (type == \"getMarkersForCluster\") {\n        loaded.then(x => {\n            let cluster = payload.cluster;\n            let rank_type = payload.rank_type;\n            let modality = payload.modality;\n            var resp = superstate.marker_detection.fetchGroupResults(cluster, rank_type, modality);\n\n            var transferrable = [];\n            extractBuffers(resp, transferrable);\n            postMessage({\n                type: \"setMarkersForCluster\",\n                resp: resp,\n                msg: \"Success: GET_MARKER_GENE done\"\n            }, transferrable);\n        }).catch(err => {\n            console.error(err);\n            postError(type, err, fatal)\n        });\n\n    } else if (type == \"getGeneExpression\") {\n        loaded.then(x => {\n            let row_idx = payload.gene;\n            let modality = payload.modality.toLowerCase()\n\n            var vec;\n            if (modality === \"rna\") {\n                vec = superstate.normalization.fetchExpression(row_idx);\n            } else if (modality === \"adt\") {\n                vec = superstate.adt_normalization.fetchExpression(row_idx);\n            } else {\n                throw new Error(\"unknown feature type '\" + modality + \"'\");\n            }\n\n            postMessage({\n                type: \"setGeneExpression\",\n                resp: {\n                    gene: row_idx,\n                    expr: vec\n                },\n                msg: \"Success: GET_GENE_EXPRESSION done\"\n            }, [vec.buffer]);\n        }).catch(err => {\n            console.error(err);\n            postError(type, err, fatal)\n        });\n\n    } else if (type == \"computeCustomMarkers\") {\n        loaded.then(x => {\n            superstate.custom_selections.addSelection(payload.id, payload.selection);\n            postMessage({\n                type: \"computeCustomMarkers\",\n                msg: \"Success: COMPUTE_CUSTOM_MARKERS done\"\n            });\n        }).catch(err => {\n            console.error(err);\n            postError(type, err, fatal)\n        });\n\n    } else if (type == \"getMarkersForSelection\") {\n        loaded.then(x => {\n            let rank_type = payload.rank_type.replace(/-.*/, \"\"); // summary type doesn't matter for pairwise comparisons.\n            var resp = superstate.custom_selections.fetchResults(payload.cluster, rank_type, payload.modality);\n            var transferrable = [];\n            extractBuffers(resp, transferrable);\n            postMessage({\n                type: \"setMarkersForCustomSelection\",\n                resp: resp,\n                msg: \"Success: GET_MARKER_GENE done\"\n            }, transferrable);\n        }).catch(err => {\n            console.error(err);\n            postError(type, err, fatal)\n        });\n\n    } else if (type == \"removeCustomMarkers\") {\n        loaded.then(x => {\n            superstate.custom_selections.removeSelection(payload.id);\n        }).catch(err => {\n            console.error(err);\n            postError(type, err, fatal)\n        });\n\n    } else if (type == \"animateTSNE\") {\n        loaded.then(async (x) => {\n            await superstate.tsne.animate();\n            postSuccess(\"tsne\", await superstate.tsne.summary());\n        }).catch(err => {\n            console.error(err);\n            postError(type, err, fatal)\n        });\n\n    } else if (type == \"animateUMAP\") {\n        loaded.then(async (x) => {\n            await superstate.umap.animate();\n            postSuccess(\"umap\", await superstate.umap.summary());\n        }).catch(err => {\n            console.error(err);\n            postError(type, err, fatal)\n        });\n\n    } else if (type == \"getAnnotation\") {\n        loaded.then(x => {\n            let annot = payload.annotation;\n            let vec, result;\n\n            // Filter to match QC unless requested otherwise.\n            if (payload.unfiltered !== false) {\n                vec = superstate.cell_filtering.fetchFilteredAnnotations(annot);\n            } else {\n                vec = superstate.inputs.fetchAnnotations(annot);\n            }\n\n            if (ArrayBuffer.isView(vec)) {\n                result = {\n                    \"type\": \"array\",\n                    \"values\": vec.slice()\n                };\n            } else {\n                let uniq_vals = [];\n                let uniq_map = {};\n                let indices = new Int32Array(vec.length);\n                vec.map((x, i) => {\n                    if (!(x in uniq_map)) {\n                        uniq_map[x] = uniq_vals.length;\n                        uniq_vals.push(x);\n                    }\n                    indices[i] = uniq_map[x];\n                });\n        \n                result = {\n                    \"type\": \"factor\",\n                    \"index\": indices,\n                    \"levels\": uniq_vals\n                };\n            }\n\n            let extracted = [];\n            extractBuffers(result, extracted);\n            postMessage({\n                type: \"setAnnotation\",\n                resp: {\n                    annotation: annot,\n                    values: result\n                },\n                msg: \"Success: GET_ANNOTATION done\"\n            }, extracted);\n        }).catch(err => {\n            console.error(err);\n            postError(type, err, fatal)\n        });\n\n    } else {\n        console.error(\"MIM:::msg type incorrect\")\n        postError(type, \"Type not defined\", fatal)\n    }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = function() {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [637,901], function() { return __webpack_require__(5614); })\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = function(chunkId) {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce(function(promises, key) {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + {\"484\":\"24d46685\",\"637\":\"4908d708\",\"901\":\"968b8daa\",\"909\":\"38c9fe02\",\"933\":\"4fa7540a\"}[chunkId] + \".chunk.js\";\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.miniCssF = function(chunkId) {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/kana/\";","__webpack_require__.b = self.location + \"/../../../\";\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t614: 1\n};\n\n// importScripts chunk loading\nvar installChunk = function(data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = function(chunkId, promises) {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunkkana\"] = self[\"webpackChunkkana\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","var next = __webpack_require__.x;\n__webpack_require__.x = function() {\n\treturn Promise.all([\n\t\t__webpack_require__.e(637),\n\t\t__webpack_require__.e(901)\n\t]).then(next);\n};","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n"],"names":["kanaDB","DownloadsDB","init","getRecordsResolver","resolve","store","result","transaction","objectStore","allAnalysis","getAll","onsuccess","vals","forEach","x","files","onerror","loadContent","id","Promise","request","get","undefined","allOK","promises","allSettled","then","getRecords","saveFile","buffer","trans","file_store","meta_store","meta","refcount","data_saving","putrequest","put","event","ref_saving","count","saveAnalysis","state","title","analysis_store","already","String","length","id_saving","Number","Date","removeFile","push","remove","delete","f","url","params","force","download_store","data_check","payload","found","req","fetch","res","ok","status","arrayBuffer","mappings","quality_control","use_mito_default","mito_prefix","nmads","skip","adt_quality_control","min_detected_drop","igg_prefix","adt_normalization","num_pcs","num_clusters","feature_selection","span","pca","num_hvgs","adt_pca","combine_embeddings","weights","batch_correction","num_neighbors","choose_clustering","method","tsne","perplexity","iterations","animate","umap","num_epochs","min_dist","kmeans_cluster","k","snn_graph_cluster","scheme","resolution","cell_labelling","human_references","mouse_references","toUI","safeExtract","step","par","Error","curstep","reversed","inputs","Object","entries","spars","target","currev","bakana","ann","approximate","extractBuffers","object","Array","isArray","constructor","ArrayBuffer","isView","postAttempt","postMessage","type","postSuccess","info","transferable","resp","postError","err","fatal","reason","toString","loaded","superstate","linkKanaDb","collected","name","hashwasm","Uint8Array","md5","byteLength","kana_db","serializeAllSteps","embedded","h5path","old","output","unserializeAllSteps","contents","loader","finishFun","loaded_state","translate","custom_selections","fetchSelections","console","log","other","y","iter","iteration","onmessage","msg","data","nthreads","Math","round","navigator","hardwareConcurrency","back_init","numberOfThreads","state_init","kana_init","indexedDB","open","onupgradeneeded","e","kanaDBClient","deleteObjectStore","createObjectStore","keyPath","error","down_init","reject","DownloadsDBClient","catch","all","formatted","safeReplace","value","batch","subset","Set","values","size","startFun","fs","keys","format","file","reader","FileReaderSync","readAsArrayBuffer","transferrable","recs","details","rank_type","replace","marker_detection","computeVersus","left","right","modality","cluster","fetchGroupResults","vec","row_idx","gene","toLowerCase","normalization","fetchExpression","expr","addSelection","selection","fetchResults","removeSelection","summary","annot","annotation","unfiltered","cell_filtering","fetchFilteredAnnotations","fetchAnnotations","slice","uniq_vals","uniq_map","indices","Int32Array","map","i","extracted","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","__webpack_exports__","O","deferred","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","every","key","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","chunkId","reduce","u","miniCssF","g","globalThis","this","Function","window","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","p","b","self","location","installedChunks","importScripts","chunkLoadingGlobal","parentChunkLoadingFunction","bind","moreModules","runtime","pop","next"],"sourceRoot":""}