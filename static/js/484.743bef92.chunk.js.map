{"version":3,"file":"static/js/484.743bef92.chunk.js","mappings":"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","sources":["../node_modules/bakana/browser/steps/tsne.worker.js","../node_modules/scran.js/browser/runTSNE.js","../webpack/bootstrap","../webpack/runtime/chunk loaded","../webpack/runtime/define property getters","../webpack/runtime/ensure chunk","../webpack/runtime/get javascript chunk filename","../webpack/runtime/get mini-css chunk filename","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/publicPath","../webpack/runtime/importScripts chunk loading","../webpack/runtime/startup chunk dependencies","../webpack/startup"],"sourcesContent":["import * as scran from \"scran.js\";\nimport * as utils from \"./utils/general.js\";\nimport * as vizutils from \"./utils/viz_child.js\";\nimport * as aworkers from \"../abstract/worker_child.js\";\n\nvar cache = {};\nvar init_changed = false;\nvar init_parameters = {};\nvar run_parameters = {};\n\nfunction rerun(animate, iterations) {\n    var num_obs = cache.init.numberOfCells(); \n    var delay = vizutils.chooseDelay(animate);\n    var current_status = cache.init.clone();\n\n    try {\n        for (; current_status.iterations() < iterations; ) {\n            scran.runTSNE(current_status, { runTime: delay, maxIterations: iterations }); \n  \n            if (animate) {\n                let xy = current_status.extractCoordinates();\n                aworkers.sendMessage({\n                    \"type\": \"tsne_iter\",\n                    \"x\": xy.x,\n                    \"y\": xy.y,\n                    \"iteration\": current_status.iterations()\n                }, [xy.x.buffer, xy.y.buffer]);\n            }\n        }\n        cache.final = current_status.extractCoordinates();\n\n    } finally {\n        current_status.free();\n    }\n}\n\nvar loaded;\naworkers.registerCallback(msg => {\n    var id = msg.data.id;\n  \n    if (msg.data.cmd == \"INIT\") {\n        loaded = scran.initialize(msg.data.scranOptions); \n        loaded\n            .then(x => {\n                aworkers.sendMessage({\n                    \"id\": id,\n                    \"type\": \"init_worker\",\n                    \"data\": { \"status\": \"SUCCESS\" }\n                });\n            })\n            .catch(error => {\n                aworkers.sendMessage({ \n                    \"id\": id,\n                    \"type\": \"error\",\n                    \"error\": error\n                });\n            });\n  \n    } else if (msg.data.cmd == \"RUN\") {\n        loaded\n            .then(x => {\n                var new_neighbors;\n                if (\"neighbors\" in msg.data) {\n                    utils.freeCache(cache.neighbors);\n                    cache.neighbors = vizutils.recreateNeighbors(msg.data.neighbors);\n                    new_neighbors = true;\n                } else {\n                    new_neighbors = false;\n                }\n\n                var init_args = { \"perplexity\": msg.data.params.perplexity };\n                if (!new_neighbors && !utils.changedParameters(init_args, init_parameters)) {\n                    init_changed = false;\n                } else {\n                    utils.freeCache(cache.init);\n                    cache.init = scran.initializeTSNE(cache.neighbors, { perplexity: init_args.perplexity });\n                    init_parameters = init_args;\n                    init_changed = true;\n                }\n\n                // Nothing downstream depends on the run results, so we don't set any changed flag.\n                var run_args = { \"iterations\": msg.data.params.iterations };\n                if (init_changed || utils.changedParameters(run_args, run_parameters)) {\n                    rerun(msg.data.params.animate, run_args.iterations);\n                    run_parameters = run_args;\n                }\n          \n                aworkers.sendMessage({\n                    \"id\": id,\n                    \"type\": \"tsne_run\",\n                    \"data\": { \"status\": \"SUCCESS\" }\n                });\n            })\n            .catch(error => {\n                aworkers.sendMessage({ \n                    \"id\": id,\n                    \"type\": \"error\",\n                    \"error\": error\n                });\n            });\n  \n    } else if (msg.data.cmd == \"RERUN\") {\n        loaded\n            .then(x => {\n                rerun(true, run_parameters.iterations);\n                aworkers.sendMessage({\n                    \"id\": id,\n                    \"type\": \"tsne_rerun\",\n                    \"data\": { \"status\": \"SUCCESS\" }\n                });\n            })\n            .catch(error => {\n                aworkers.sendMessage({ \n                    \"id\": id,\n                    \"type\": \"error\",\n                    \"error\": error\n                });\n            });\n\n    } else if (msg.data.cmd == \"FETCH\") {\n        loaded\n            .then(x => {\n                var info = {\n                    \"x\": cache.final.x.slice(),\n                    \"y\": cache.final.y.slice(),\n                    \"iterations\": run_parameters.iterations\n                };\n                var transfer = [info.x.buffer, info.y.buffer];\n                aworkers.sendMessage({\n                    \"id\": id,\n                    \"type\": \"tsne_fetch\",\n                    \"data\": info\n                }, transfer);\n            })\n            .catch(error => {\n                aworkers.sendMessage({ \n                    \"id\": id,\n                    \"type\": \"error\",\n                    \"error\": error\n                });\n            });\n    }\n});\n","import * as utils from \"./utils.js\";\nimport * as wasm from \"./wasm.js\";\nimport * as gc from \"./gc.js\";\nimport { BuildNeighborSearchIndexResults, findNearestNeighbors } from \"./findNearestNeighbors.js\";\n\n/**\n * Wrapper around the t-SNE status object on the Wasm heap, typically created by {@linkcode initializeTSNE}.\n * @hideconstructor\n */\nexport class InitializeTSNEResults {\n    #id;\n    #status;\n    #coordinates;\n\n    constructor(id, raw_status, raw_coordinates) {\n        this.#id = id;\n        this.#status = raw_status;\n        this.#coordinates = raw_coordinates;\n        return;\n    }\n\n    // Internal use only, not documented.\n    get status() {\n        return this.#status;\n    }\n\n    // Internal use only, not documented.\n    get coordinates() {\n        return this.#coordinates;\n    }\n\n    /**\n     * @return {InitializeTSNEResults} A deep copy of this object.\n     */\n    clone() {\n        return gc.call(\n            module => this.#status.deepcopy(), \n            InitializeTSNEResults, \n            this.#coordinates.clone()\n        );\n    }\n\n    /**\n     * @return {number} Number of cells in the dataset.\n     */\n    numberOfCells () {\n        return this.#status.num_obs();\n    }\n\n    /**\n     * @return {number} Number of iterations processed so far.\n     * This will change with repeated invocations of {@linkcode runTSNE} on this object.\n     */\n    iterations () {\n        return this.#status.iterations();\n    }\n\n    /**\n     * @return {object} Object with `x` and `y` keys.\n     * The corresponding values are Float64Array objects of length equal to the number of cells,\n     * containing the x- and  y- coordinates for each cell at the current state of the algorithm.\n     */\n    extractCoordinates() {\n        return utils.extractXY(this.numberOfCells(), this.#coordinates.array()); \n    }\n\n    /**\n     * @return Frees the memory allocated on the Wasm heap for this object.\n     * This invalidates this object and all references to it.\n     */   \n    free() {\n        if (this.#status !== null) {\n            gc.release(this.#id);\n            this.#status = null;\n        }\n        if (this.#coordinates !== null) {\n            this.#coordinates.free();\n            this.#coordinates = null;\n        }\n        return;\n    }\n}\n\n/**\n * @param {number} perplexity - Perplexity to use in the t-SNE algorithm.\n * @return {number} Appropriate number of neighbors to use in the nearest neighbor search.\n */\nexport function perplexityToNeighbors(perplexity) {\n    return wasm.call(module => module.perplexity_to_k(perplexity));\n}\n\n/**\n * @param {(BuildNeighborSearchIndexResults|FindNearestNeighborsResults)} x \n * Either a pre-built neighbor search index for the dataset (see {@linkcode buildNeighborSearchIndex}),\n * or a pre-computed set of neighbor search results for all cells (see {@linkcode findNearestNeighbors}).\n * @param {object} [options] - Optional parameters.\n * @param {number} [options.perplexity=30] - Perplexity to use when computing neighbor probabilities in the t-SNE.\n * @param {boolean} [options.checkMismatch=true] - Whether to check for a mismatch between the perplexity and the number of searched neighbors.\n * Only relevant if `x` is a {@linkplain FindNearestNeighborsResults} object.\n * @param {?number} [options.numberOfThreads=null] - Number of threads to use.\n * If `null`, defaults to {@linkcode maximumThreads}.\n *\n * @return {InitializeTSNEResults} Object containing the initial status of the t-SNE algorithm.\n */\nexport function initializeTSNE(x, { perplexity = 30, checkMismatch = true, numberOfThreads = null } = {}) {\n    var my_neighbors;\n    var raw_coords;\n    var output;\n    let nthreads = utils.chooseNumberOfThreads(numberOfThreads);\n\n    try {\n        let neighbors;\n\n        if (x instanceof BuildNeighborSearchIndexResults) {\n            let k = perplexityToNeighbors(perplexity);\n            my_neighbors = findNearestNeighbors(x, k, { numberOfThreads: nthreads });\n            neighbors = my_neighbors;\n\n        } else {\n            if (checkMismatch) {\n                let k = perplexityToNeighbors(perplexity);\n                if (k * x.numberOfCells() != x.size()) {\n                    throw new Error(\"number of neighbors in 'x' does not match '3 * perplexity'\");\n                }\n            }\n            neighbors = x;\n        }\n\n        raw_coords = utils.createFloat64WasmArray(2 * neighbors.numberOfCells());\n        wasm.call(module => module.randomize_tsne_start(neighbors.numberOfCells(), raw_coords.offset, 42));\n        output = gc.call(\n            module => module.initialize_tsne(neighbors.results, perplexity, nthreads),\n            InitializeTSNEResults,\n            raw_coords\n        );\n\n    } catch(e) {\n        utils.free(output);\n        utils.free(raw_coords);\n        throw e;\n\n    } finally {\n        utils.free(my_neighbors);\n    }\n\n    return output;\n}\n\n/**\n * Run the t-SNE algorithm on an initialized {@linkplain InitializeTSNEResults}.\n *\n * @param {InitializeTSNEResults} x A previously initialized status object from {@linkcode initializeTSNE}.\n * This may be passed through {@linkcode runTSNE} any number of times.\n * @param {object} [options] - Optional parameters.\n * @param {number} [options.maxIterations=1000] - Maximum number of iterations to perform.\n * This number includes all existing iterations that were already performed in `x` from previous calls to {@linkcode runTSNE}.\n * @param {?number} [options.runTime=null] - Number of milliseconds for which the algorithm is allowed to run before returning.\n * If `null`, no limit is imposed on the runtime.\n *\n * @return The algorithm status in `x` is advanced up to the requested number of iterations,\n * or until the requested run time is exceeded, whichever comes first.\n */\nexport function runTSNE(x, { maxIterations = 1000, runTime = null } = {}) {\n    if (runTime === null) {\n        runTime = -1;\n    }\n    wasm.call(module => module.run_tsne(x.status, runTime, maxIterations, x.coordinates.offset));\n    return;\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = function() {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [637,666], function() { return __webpack_require__(1484); })\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = function(chunkId) {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce(function(promises, key) {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + {\"637\":\"8a6cdf3b\",\"666\":\"d74aad60\",\"909\":\"e25ad7c3\"}[chunkId] + \".chunk.js\";\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.miniCssF = function(chunkId) {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","__webpack_require__.p = \"/kana/\";","__webpack_require__.b = self.location + \"/../../../\";\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t484: 1\n};\n\n// importScripts chunk loading\nvar installChunk = function(data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = function(chunkId, promises) {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunkkana\"] = self[\"webpackChunkkana\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","var next = __webpack_require__.x;\n__webpack_require__.x = function() {\n\treturn Promise.all([\n\t\t__webpack_require__.e(637),\n\t\t__webpack_require__.e(666)\n\t]).then(next);\n};","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n"],"names":["loaded","cache","init_changed","init_parameters","run_parameters","rerun","animate","iterations","init","numberOfCells","delay","vizutils","current_status","clone","scran","runTime","maxIterations","xy","extractCoordinates","aworkers","x","y","buffer","final","free","msg","id","data","cmd","scranOptions","then","catch","error","new_neighbors","utils","neighbors","init_args","params","perplexity","run_args","info","slice","transfer","InitializeTSNEResults","raw_status","raw_coordinates","this","gc","module","deepcopy","num_obs","array","perplexityToNeighbors","wasm","perplexity_to_k","initializeTSNE","my_neighbors","raw_coords","output","checkMismatch","numberOfThreads","nthreads","BuildNeighborSearchIndexResults","k","findNearestNeighbors","size","Error","randomize_tsne_start","offset","initialize_tsne","results","e","runTSNE","run_tsne","status","coordinates","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","__webpack_modules__","m","__webpack_exports__","O","deferred","result","chunkIds","fn","priority","notFulfilled","Infinity","i","length","fulfilled","j","Object","keys","every","key","splice","r","d","definition","o","defineProperty","enumerable","get","f","chunkId","Promise","all","reduce","promises","u","miniCssF","obj","prop","prototype","hasOwnProperty","call","p","b","self","location","installedChunks","importScripts","chunkLoadingGlobal","parentChunkLoadingFunction","push","bind","moreModules","runtime","pop","next"],"sourceRoot":""}