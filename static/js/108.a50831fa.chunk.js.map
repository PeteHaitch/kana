{"version":3,"file":"static/js/108.a50831fa.chunk.js","mappings":"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","sources":["workers/KanaDBHandler.js","workers/DownloadsDBHandler.js","workers/scran.worker.js","../webpack/bootstrap","../webpack/runtime/chunk loaded","../webpack/runtime/compat get default export","../webpack/runtime/define property getters","../webpack/runtime/ensure chunk","../webpack/runtime/get javascript chunk filename","../webpack/runtime/get mini-css chunk filename","../webpack/runtime/global","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/make namespace object","../webpack/runtime/publicPath","../webpack/runtime/importScripts chunk loading","../webpack/runtime/startup chunk dependencies","../webpack/startup"],"sourcesContent":["var kanaDB;\nvar init = null;\n\nexport function initialize() {\n    init = new Promise(resolve => {\n        // initialize database on worker creation\n        kanaDB = indexedDB.open(\"KanaDB\", 2);\n\n        kanaDB.onupgradeneeded = (e) => {\n            var kanaDBClient = e.target.result;\n\n            // Currently purging all existing stores when the version is updated.\n            // At some point we may add a more sophisticated upgrade mechanism.\n            try {\n                kanaDBClient.deleteObjectStore(\"analysis\");\n            } catch (e) {}\n            try {\n                kanaDBClient.deleteObjectStore(\"analysis_meta\");\n            } catch (e) {}\n            try {\n                kanaDBClient.deleteObjectStore(\"file\");\n            } catch (e) {}\n            try {\n                kanaDBClient.deleteObjectStore(\"file_meta\");\n            } catch (e) {}\n\n            kanaDBClient.createObjectStore(\"analysis\", { keyPath: 'id' });\n            kanaDBClient.createObjectStore(\"analysis_meta\", { keyPath: 'id' });\n            kanaDBClient.createObjectStore(\"file\", { keyPath: 'id' });\n            kanaDBClient.createObjectStore(\"file_meta\", { keyPath: 'id' });\n        };\n\n        // Send existing stored analyses, if available.\n        kanaDB.onsuccess = () => {\n            getRecordsResolver(resolve);\n        };\n\n        kanaDB.onerror = () => {\n            resolve(null);\n        };\n    });\n\n    return init;\n}\n\nfunction getRecordsResolver(resolve, store = null) {\n    if (store === null) {\n        store = kanaDB.result\n            .transaction([\"analysis_meta\"], \"readonly\")\n            .objectStore(\"analysis_meta\")\n    }\n\n    var allAnalysis = store.getAll();\n\n    allAnalysis.onsuccess = function () {\n        let vals = allAnalysis.result;\n        vals.forEach(x => { delete x.files }); // no need to transfer that.\n        resolve(vals);\n    };\n    allAnalysis.onerror = function () {\n        resolve(null);\n    };\n}\n\n/** Helper functions **/\nasync function loadContent(id, store) {\n    return new Promise(resolve => {\n        let request = store.get(id);\n        request.onsuccess = function () {\n            if (request.result !== undefined) {\n                resolve(request.result);\n            } else {\n                resolve(null);\n            }\n        };\n        request.onerror = function () {\n            resolve(null);\n        };\n    });\n}\n\nfunction allOK(promises) {\n    return Promise.allSettled(promises)\n        .then(vals => {\n            for (const x of vals) {\n                if (!x) {\n                    return false;\n                }\n            }\n            return true;\n        });\n}\n\nexport async function getRecords() {\n    await init;\n    return new Promise(resolve => {\n        getRecordsResolver(resolve);\n    });\n}\n\n/** Functions to save content **/\nexport async function saveFile(id, buffer) {\n    await init;\n    let trans = kanaDB.result.transaction([\"file\", \"file_meta\"], \"readwrite\");\n    let file_store = trans.objectStore(\"file\");\n    let meta_store = trans.objectStore(\"file_meta\");\n\n    var meta = await loadContent(id, meta_store);\n    var refcount;\n    if (meta === null) {\n        refcount = 0;\n    } else {\n        refcount = meta[\"count\"];\n    }\n    refcount++;\n\n    var data_saving = new Promise(resolve => {\n        var putrequest = file_store.put({ \"id\": id, \"payload\": buffer });\n        putrequest.onsuccess = function (event) {\n            resolve(true);\n        };\n        putrequest.onerror = function (event) {\n            resolve(false);\n        };\n    });\n\n    var ref_saving = new Promise(resolve => {\n        meta.count = refcount;\n        var putrequest = meta_store.put(meta);\n        putrequest.onsuccess = function (event) {\n            resolve(true);\n        };\n        putrequest.onerror = function (event) {\n            resolve(false);\n        };\n    });\n\n    return allOK([data_saving, ref_saving])\n};\n\nexport async function saveAnalysis(id, state, files, title) { \n    await init;\n    let trans = kanaDB.result.transaction([\"analysis\", \"analysis_meta\"], \"readwrite\")\n    let analysis_store = trans.objectStore(\"analysis\");\n    let meta_store = trans.objectStore(\"analysis_meta\");\n\n    if (id == null) {\n        let already = await new Promise(resolve => getRecordsResolver(resolve, meta_store));\n        id = String(already.length);\n    }\n\n    var data_saving = new Promise(resolve => {\n        var putrequest = analysis_store.put({ \"id\": id, \"payload\": state });\n        putrequest.onsuccess = function (event) {\n            resolve(true);\n        };\n        putrequest.onerror = function (event) {\n            resolve(false);\n        };\n    });\n\n    var id_saving = new Promise(resolve => {\n        var putrequest = meta_store.put({ \"id\": id, \"files\": files, \"time\": Number(new Date()), \"title\": title });\n        putrequest.onsuccess = function (event) {\n            resolve(true);\n        };\n        putrequest.onerror = function (event) {\n            resolve(false);\n        };\n    });\n\n    if (await allOK([data_saving, id_saving])) {\n        return id;\n    } else {\n        return null;\n    }\n};\n\n/** Functions to load content **/\nexport async function loadFile(id) {\n    await init;\n    let file_store = kanaDB.result\n        .transaction([\"file\"], \"readonly\")\n        .objectStore(\"file\");\n\n    var meta = await loadContent(id, file_store);\n    return meta[\"payload\"];\n}\n\nexport async function loadAnalysis(id) {\n    await init;\n    let analysis_store = kanaDB.result\n        .transaction([\"analysis\"], \"readonly\")\n        .objectStore(\"analysis\");\n    var meta = await loadContent(id, analysis_store);\n    return meta[\"payload\"];\n}\n\n/** Functions to load content **/\nexport async function removeFile(id) {\n    await init;\n    let trans = kanaDB.result.transaction([\"file\", \"file_meta\"], \"readwrite\");\n    let file_store = trans.objectStore(\"file\");\n    let meta_store = trans.objectStore(\"file_meta\");\n\n    var meta = await loadContent(id, meta_store);\n    var refcount = meta[\"count\"];\n    refcount--;\n    var promises = [];\n\n    if (refcount == 0) {\n        promises.push(new Promise(resolve => {\n            let request = file_store.remove(id);\n            request.onerror = function (event) {\n                resolve(false);\n            };\n            request.onsuccess = function (event) {\n                resolve(true);\n            };\n        }));\n        promises.push(new Promise(resolve => {\n            let request = meta_store.delete(id);\n            request.onerror = function (event) {\n                resolve(false);\n            };\n            request.onsuccess = function (event) {\n                resolve(true);\n            };\n        }))\n    } else {\n        promises.push(new Promise(resolve => {\n            meta.count = refcount;\n            let request = meta_store.put(meta);\n            request.onsuccess = function (event) {\n                resolve(true);\n            };\n            request.onerror = function (event) {\n                resolve(false);\n            };\n        }));\n    }\n\n    return allOK(promises);\n}\n\nexport async function removeAnalysis(id) {\n    await init;\n    let trans = kanaDB.result.transaction([\"analysis\", \"analysis_meta\"], \"readwrite\")\n    let analysis_store = trans.objectStore(\"analysis\");\n    let meta_store = trans.objectStore(\"analysis_meta\");\n\n    var promises = [];\n\n    promises.push(new Promise(resolve => {\n        let request = analysis_store.delete(id);\n        request.onsuccess = function (event) {\n            resolve(true);\n        };\n        request.onerror = function (event) {\n            resolve(false);\n        };\n    }));\n\n    // Removing all files as well.\n    var meta = await loadContent(id, meta_store);\n    for (const f of meta[\"files\"]) {\n        promises.push(removeFile(f));\n    }\n\n    promises.push(new Promise(resolve => {\n        let request = meta_store.delete(id);\n        request.onsuccess = function (event) {\n            resolve(true);\n        };\n        request.onerror = function (event) {\n            resolve(false);\n        };\n    }));\n\n    return allOK(promises);\n}\n","var DownloadsDB;\nvar init = null;\n\nexport function initialize() {\n    if (init === null) {\n        init = new Promise((resolve, reject) => {\n            // initialize database on worker creation\n            DownloadsDB = indexedDB.open(\"DownloadsDB\", 3);\n\n            DownloadsDB.onupgradeneeded = (e) => {\n                var DownloadsDBClient = e.target.result;\n\n                // Currently purging all existing stores when the version is updated.\n                // At some point we may add a more sophisticated upgrade mechanism.\n                try {\n                    DownloadsDBClient.deleteObjectStore(\"downloads\");\n                } catch (e) {}\n\n                DownloadsDBClient.createObjectStore(\"downloads\", { keyPath: 'url' });\n            };\n\n            DownloadsDB.onsuccess = () => {\n                resolve(null);\n            };\n\n            DownloadsDB.onerror = () => {\n                reject(\"failed to initialize DownloadsDB\");\n            };\n        });\n    }\n\n    return init;\n}\n\nexport async function list() {\n    await init;\n    let trans = DownloadsDB.result.transaction([\"downloads\"], \"readonly\");\n    let download_store = trans.objectStore(\"downloads\");\n    return download_store.getAllKeys();\n}\n\nexport async function get(url, params = null, force = false) {\n    await init;\n\n    if (!force) {\n        let trans = DownloadsDB.result.transaction([\"downloads\"], \"readonly\");\n        let download_store = trans.objectStore(\"downloads\");\n        var data_check = new Promise(resolve => {\n            var already = download_store.get(url);\n            already.onsuccess = function (event) {\n                if (already.result !== undefined) {\n                    resolve(already.result.payload);\n                } else {\n                    resolve(null);\n                }\n            };\n            already.onerror = function (event) {\n                resolve(null);\n            };\n        });\n\n        var found = await data_check;\n        if (found !== null) {\n            return found;\n        }\n    }\n\n    var req;\n    if (params == null) {\n        req = fetch(url);\n    } else {\n        req = fetch(url, params);\n    }\n\n    var res = await req;\n    if (!res.ok) {\n        throw \"failed to download '\" + url + \"' (\" + res.status + \")\";\n    }\n    var buffer = await res.arrayBuffer();\n\n    // Technically, this isn't quite right, because we need to close the read\n    // transaction before opening the write transaction; multiple queries to\n    // the same URL from different workers could cause multiple downloads if\n    // they each miss each other's read check. But oh well; the auto-commit\n    // of IDB transactions means that it's hard to do any better. (Specifically,\n    // we can't do an async fetch while the transaction is still open, because\n    // it just closes before the fetch is done.)\n    let trans = DownloadsDB.result.transaction([\"downloads\"], \"readwrite\");\n    let download_store = trans.objectStore(\"downloads\");\n    var data_saving = new Promise(resolve => {\n        var putrequest = download_store.put({ \"url\": url, \"payload\": buffer });\n        putrequest.onsuccess = function (event) {\n            resolve(true);\n        };\n        putrequest.onerror = function (event) {\n            resolve(false);\n        };\n    });\n\n    let success = await data_saving;\n    if (!success) {\n        throw \"failed to download resources for '\" + url + \"'\";\n    }\n\n    return buffer;\n}\n\nexport async function remove(url) {\n    await init;\n    let trans = DownloadsDB.result.transaction([\"downloads\"], \"readwrite\")\n    let download_store = trans.objectStore(\"downloads\");\n\n    var removal = new Promise(resolve => {\n        let request = download_store.delete(url);\n        request.onsuccess = function (event) {\n            resolve(true);\n        };\n        request.onerror = function (event) {\n            resolve(false);\n        };\n    });\n\n    return await removal;\n}\n","import * as bakana from \"bakana\";\nimport * as kana_db from \"./KanaDBHandler.js\";\nimport * as downloads from \"./DownloadsDBHandler.js\";\nimport * as hashwasm from \"hash-wasm\";\n\n/***************************************/\n\nfunction extractBuffers(object, store) {\n    if (!object) {\n        return;\n    }\n\n    if (Array.isArray(object)) {\n        for (const element of object) {\n            extractBuffers(element, store);\n        }\n    } else if (object.constructor == Object) {\n        for (const [key, element] of Object.entries(object)) {\n            extractBuffers(element, store);\n        }\n    } else if (ArrayBuffer.isView(object)) {\n        if (!(object.buffer instanceof ArrayBuffer)) {\n            throw \"only ArrayBuffers should be in the message payload\";\n        }\n        store.push(object.buffer);\n    }\n}\n\nfunction postAttempt(step) {\n    postMessage({\n        type: `${step}_START`\n    });\n}\n\nfunction postSuccess(step, info) {\n    if (typeof info == \"undefined\") {\n        postMessage({\n            type: `${step}_CACHE`\n        });\n    } else {\n        var transferable = [];\n        extractBuffers(info, transferable);\n        postMessage({\n            type: `${step}_DATA`,\n            resp: info\n        }, transferable);\n    }\n}\n\n/***************************************/\n\nlet superstate = null;\n\nbakana.setCellLabellingDownload(downloads.get);\n\nbakana.setVisualizationAnimate((type, x, y, iter) => {\n    postMessage({\n        type: type + \"_iter\",\n        x: x,\n        y: y,\n        iteration: iter\n    }, [x.buffer, y.buffer]);\n});\n\nfunction runAllSteps(inputs, params) {\n    // Assembling the giant parameter list.\n    let formatted = {\n        inputs: {\n            sample_factor: inputs.batch\n        },\n        quality_control: {\n            use_mito_default: params.qc[\"qc-usemitodefault\"],\n            mito_prefix: params.qc[\"qc-mito\"],\n            nmads: params.qc[\"qc-nmads\"]\n        },\n        normalization: {},\n        feature_selection: {\n            span: params.fSelection[\"fsel-span\"]\n        },\n        pca: {\n            num_hvgs: params.pca[\"pca-hvg\"],\n            num_pcs: params.pca[\"pca-npc\"],\n        },\n        neighbor_index: {\n        },\n        choose_clustering: {\n            method: params.cluster[\"clus-method\"]\n        },\n        tsne: {\n            perplexity: params.tsne[\"tsne-perp\"],\n            iterations: params.tsne[\"tsne-iter\"],\n            animate: params.tsne[\"animate\"]\n        },\n        umap: {\n            num_neighbors: params.umap[\"umap-nn\"],\n            num_epochs: params.umap[\"umap-epochs\"],\n            min_dist: params.umap[\"umap-min_dist\"],\n            animate: params.umap[\"animate\"]\n        },\n        kmeans_cluster: {\n            k: params.cluster[\"kmeans-k\"]\n        },\n        snn_graph_cluster: {\n            k: params.cluster[\"clus-k\"],\n            scheme: params.cluster[\"clus-scheme\"],\n            resolution: params.cluster[\"clus-res\"]\n        },\n        markers: {},\n        cell_labelling: {\n            human_references: params.annotateCells[\"annotateCells-human_references\"],\n            mouse_references: params.annotateCells[\"annotateCells-mouse_references\"]\n        },\n        custom_markers: {},\n        adt_normalization: params.adt_normalization,\n        adt_pca: params.adt_pca,\n        adt_quality_control: params.adt_qualitycontrol,\n        combine_embeddings: params.combine_embeddings,\n        batch_correction: params.batch_correction,\n    };\n\n    bakana.configureBatchCorrection(formatted, params.batch_correction[\"method\"]);\n    bakana.configureApproximateNeighbors(formatted, params.ann[\"approximate\"]);\n\n    // Simplify the combine_embeddings if we see it is all equal.\n    if (formatted.combine_embeddings.weights !== null) {\n        let uniq_weights = new Set(Object.values(formatted.combine_embeddings.weights));\n        if (uniq_weights.size <= 1) {\n            formatted.combine_embeddings.weights = null;\n        }\n    }\n\n    console.log(\"formatted\", formatted);\n\n    return bakana.runAnalysis(superstate, inputs.files, formatted, { startFun: postAttempt, finishFun: postSuccess });\n}\n\n/***************************************/\n\nfunction linkKanaDb(collected) {\n    return async (type, name, buffer) => {\n        var md5 = await hashwasm.md5(new Uint8Array(buffer));\n        var id = type + \"_\" + name + \"_\" + buffer.byteLength + \"_\" + md5;\n        var ok = await kana_db.saveFile(id, buffer);\n        if (!ok) {\n            throw \"failed to save file '\" + id + \"' to KanaDB\";\n        }\n        collected.push(id);\n        return id;\n    };\n}\n\nasync function serializeAllSteps(embedded) {\n    const h5path = \"serialized_in.h5\";\n    let collected = [];\n    let old = bakana.setCreateLink(linkKanaDb(collected));\n\n    let output;\n    try {\n        let collected = await bakana.saveAnalysis(superstate, h5path, { embedded: embedded });\n\n        if (embedded) {\n            output = bakana.createKanaFile(h5path, collected.collected);\n        } else {\n            output = {\n                state: bakana.createKanaFile(h5path, null),\n                files: collected\n            };\n        }\n    } finally {\n        bakana.removeHDF5File(h5path);\n        bakana.setCreateLink(old);\n    }\n\n    return output;\n}\n\nbakana.setResolveLink(kana_db.loadFile);\n\nasync function unserializeAllSteps(contents) {\n    const h5path = \"serialized_out.h5\";\n\n    let output = {};\n    try {\n        let loader = await bakana.parseKanaFile(contents, h5path);\n        let response = await bakana.loadAnalysis(h5path, loader, { finishFun: postSuccess });\n\n        if (superstate !== null) {\n            await bakana.freeAnalysis(superstate);\n        }\n        superstate = response.state;\n\n        let params = response.parameters;\n        output = {\n            inputs: {\n                \"batch\": params.inputs.sample_factor\n            },\n            qc: {\n                \"qc-usemitodefault\": params.quality_control.use_mito_default,\n                \"qc-mito\": params.quality_control.mito_prefix,\n                \"qc-nmads\": params.quality_control.nmads\n            },\n            fSelection: {\n                \"fsel-span\": params.feature_selection.span\n            },\n            pca: {\n                \"pca-hvg\": params.pca.num_hvgs,\n                \"pca-npc\": params.pca.num_pcs,\n                \"pca-correction\": params.pca.block_method\n            },\n            cluster: {\n                \"kmeans-k\": params.kmeans_cluster.k,\n                \"clus-k\": params.snn_graph_cluster.k,\n                \"clus-scheme\": params.snn_graph_cluster.scheme,\n                \"clus-res\": params.snn_graph_cluster.resolution,\n                \"clus-method\": params.choose_clustering.method\n            },\n            tsne: {\n                \"tsne-perp\": params.tsne.perplexity,\n                \"tsne-iter\": params.tsne.iterations,\n                \"animate\": params.tsne.animate\n            },\n            umap: {\n                \"umap-epochs\": params.umap.num_epochs,\n                \"umap-nn\": params.umap.num_neighbors,\n                \"umap-min_dist\": params.umap.min_dist,\n                \"animate\": params.umap.animate\n            },\n            annotateCells: {\n                \"annotateCells-human_references\": params.cell_labelling.human_references,\n                \"annotateCells-mouse_references\": params.cell_labelling.mouse_references\n            },\n            custom_selections: params.custom_selections,\n            adt_qualitycontrol: params.adt_quality_control,\n            adt_pca:params.adt_pca,\n            adt_normalization: params.adt_normalization,\n            combine_embeddings: params.combine_embeddings,\n            batch_correction: params.batch_correction\n        }\n    } finally {\n        bakana.removeHDF5File(h5path);\n    }\n\n    return output;\n}\n\nfunction postError(type, err, fatal) {\n    postMessage({\n        type: `${type}_ERROR`,\n        resp: {\n            reason: err.toString(),\n            fatal: fatal\n        },\n    });\n}\n\n/***************************************/\n\n\n\nvar loaded;\nonmessage = function (msg) {\n    const { type, payload } = msg.data;\n\n    let fatal = false;\n    if (type == \"INIT\") {\n        fatal = true;\n        let nthreads = Math.round(navigator.hardwareConcurrency * 2 / 3);\n        let back_init = bakana.initialize({ numberOfThreads: nthreads });\n\n        let state_init = back_init\n            .then(() => {\n                return bakana.createAnalysis()\n            });\n\n        state_init\n            .then(x => {\n                superstate = x;\n                postMessage({\n                    type: type,\n                    msg: \"Success: analysis state created\"\n                });\n            });\n\n        let kana_init = kana_db.initialize();\n        kana_init\n            .then(result => {\n                if (result !== null) {\n                    postMessage({\n                        type: \"KanaDB_store\",\n                        resp: result,\n                        msg: \"Success: KanaDB initialized\"\n                    });\n                } else {\n                    console.error(error);\n                    postMessage({\n                        type: \"KanaDB_ERROR\",\n                        msg: \"Error: Cannot initialize KanaDB\"\n                    });\n                }\n            });\n\n        let down_init = downloads.initialize();\n        down_init\n            .then(result => {\n                postMessage({\n                    type: \"DownloadsDB_store\",\n                    resp: result,\n                    msg: \"Success: DownloadsDB initialized\"\n                });\n            })\n            .catch(error => {\n                console.error(error);\n                postMessage({\n                    type: \"DownloadsDB_ERROR\",\n                    msg: \"Error: Cannot initialize DownloadsDB\"\n                });\n            });\n\n\n        loaded = Promise.all([\n            back_init,\n            kana_init,\n            down_init,\n            state_init\n        ]);\n\n        loaded.then(() => {\n            postMessage({\n                type: type,\n                msg: \"Success: bakana initialized\"\n            });\n        }).catch(err => {\n            console.error(err);\n            postError(type, err, fatal)\n        });\n        /**************** RUNNING AN ANALYSIS *******************/\n    } else if (type == \"RUN\") {\n        fatal = true;\n        loaded\n            .then(x => {\n                runAllSteps(payload.inputs, payload.params)\n                    .catch(err => {\n                        console.error(err);\n                        postError(type, err, fatal)\n                    });\n            }).catch(err => {\n                console.error(err);\n                postError(type, err, fatal)\n            });\n        /**************** LOADING EXISTING ANALYSES *******************/\n    } else if (type == \"LOAD\") {\n        fatal = true;\n        let fs = payload.inputs.files;\n\n        if (fs[Object.keys(fs)[0]].format == \"kana\") {\n            let f = fs[Object.keys(fs)[0]].file;\n            loaded\n                .then(async (x) => {\n                    const reader = new FileReaderSync();\n                    let res = reader.readAsArrayBuffer(f);\n                    let params = await unserializeAllSteps(res);\n                    postMessage({\n                        type: \"loadedParameters\",\n                        resp: params\n                    });\n                }).catch(err => {\n                    console.error(err);\n                    postError(type, err, fatal)\n                });\n        } else if (fs[Object.keys(fs)[0]].format == \"kanadb\") {\n            var id = fs[Object.keys(fs)[0]].file;\n            kana_db.loadAnalysis(id)\n                .then(async (res) => {\n                    if (res == null) {\n                        postMessage({\n                            type: \"KanaDB_ERROR\",\n                            msg: `Fail: cannot load analysis ID '${id}'`\n                        });\n                    } else {\n                        let response = await unserializeAllSteps(res);\n                        postMessage({\n                            type: \"loadedParameters\",\n                            resp: response\n                        });\n                    }\n                }).catch(err => {\n                    console.error(err);\n                    postError(type, err, fatal)\n                });\n        }\n        /**************** SAVING EXISTING ANALYSES *******************/\n    } else if (type == \"EXPORT\") {\n        loaded\n            .then(async (x) => {\n                var contents = await serializeAllSteps(true);\n                postMessage({\n                    type: \"exportState\",\n                    resp: contents,\n                    msg: \"Success: application state exported\"\n                }, [contents]);\n            }).catch(err => {\n                console.error(err);\n                postError(type, err, fatal)\n            });\n\n    } else if (type == \"SAVEKDB\") { // save analysis to inbrowser indexedDB \n        var title = payload.title;\n        loaded\n            .then(async (x) => {\n                var contents = await serializeAllSteps(false);\n                let id = await kana_db.saveAnalysis(null, contents.state, contents.files, title);\n                if (id !== null) {\n                    let recs = await kana_db.getRecords();\n                    postMessage({\n                        type: \"KanaDB_store\",\n                        resp: recs,\n                        msg: `Success: Saved analysis to cache (${id})`\n                    });\n                } else {\n                    console.error(error);\n                    postMessage({\n                        type: \"KanaDB_ERROR\",\n                        msg: `Fail: Cannot save analysis to cache`\n                    });\n                }\n            }).catch(err => {\n                console.error(err);\n                postError(type, err, fatal)\n            });\n\n        /**************** KANADB EVENTS *******************/\n    } else if (type == \"REMOVEKDB\") { // remove a saved analysis\n        var id = payload.id;\n        kana_db.removeAnalysis(id)\n            .then(async (result) => {\n                if (result) {\n                    let recs = await kana_db.getRecords();\n                    postMessage({\n                        type: \"KanaDB_store\",\n                        resp: recs,\n                        msg: `Success: Removed file from cache (${id})`\n                    });\n                } else {\n                    console.error(error);\n                    postMessage({\n                        type: \"KanaDB_ERROR\",\n                        msg: `fail: cannot remove file from cache (${id})`\n                    });\n                }\n            }).catch(err => {\n                console.error(err);\n                postError(type, err, fatal)\n            });;\n\n    } else if (type == \"PREFLIGHT_INPUT\") {\n        loaded\n            .then(async x => {\n                let resp = {};\n                try {\n                    resp.status = \"SUCCESS\";\n                    resp.details = await bakana.validateAnnotations(payload.inputs.files);\n                } catch (e) {\n                    resp.status = \"ERROR\";\n                    resp.reason = e.toString();\n                }\n\n                postMessage({\n                    type: \"PREFLIGHT_INPUT_DATA\",\n                    resp: resp,\n                    msg: \"Success: PREFLIGHT_INPUT done\"\n                });\n            }).catch(err => {\n                console.error(err);\n                postError(type, err, fatal)\n            });\n\n        /**************** OTHER EVENTS FROM UI *******************/\n    } else if (type == \"getMarkersForCluster\") {\n        loaded.then(x => {\n            let cluster = payload.cluster;\n            let rank_type = payload.rank_type;\n            let modality = payload.modality;\n            var resp = superstate.marker_detection.fetchGroupResults(cluster, rank_type, modality);\n\n            var transferrable = [];\n            extractBuffers(resp, transferrable);\n            postMessage({\n                type: \"setMarkersForCluster\",\n                resp: resp,\n                msg: \"Success: GET_MARKER_GENE done\"\n            }, transferrable);\n        }).catch(err => {\n            console.error(err);\n            postError(type, err, fatal)\n        });\n\n    } else if (type == \"getGeneExpression\") {\n        loaded.then(x => {\n            let row_idx = payload.gene;\n            let modality = payload.modality.toLowerCase()\n\n            var vec;\n            if (modality === \"rna\") {\n                vec = superstate.normalization.fetchExpression(row_idx);\n            } else if (modality === \"adt\") {\n                vec = superstate.adt_normalization.fetchExpression(row_idx);\n            } else {\n                throw new Error(\"unknown feature type '\" + modality + \"'\");\n            }\n\n            postMessage({\n                type: \"setGeneExpression\",\n                resp: {\n                    gene: row_idx,\n                    expr: vec\n                },\n                msg: \"Success: GET_GENE_EXPRESSION done\"\n            }, [vec.buffer]);\n        }).catch(err => {\n            console.error(err);\n            postError(type, err, fatal)\n        });\n\n    } else if (type == \"computeCustomMarkers\") {\n        loaded.then(x => {\n            superstate.custom_selections.addSelection(payload.id, payload.selection);\n            postMessage({\n                type: \"computeCustomMarkers\",\n                msg: \"Success: COMPUTE_CUSTOM_MARKERS done\"\n            });\n        }).catch(err => {\n            console.error(err);\n            postError(type, err, fatal)\n        });\n\n    } else if (type == \"getMarkersForSelection\") {\n        loaded.then(x => {\n            let rank_type = payload.rank_type.replace(/-.*/, \"\"); // summary type doesn't matter for pairwise comparisons.\n            var resp = superstate.custom_selections.fetchResults(payload.cluster, rank_type, payload.modality);\n            var transferrable = [];\n            extractBuffers(resp, transferrable);\n            postMessage({\n                type: \"setMarkersForCustomSelection\",\n                resp: resp,\n                msg: \"Success: GET_MARKER_GENE done\"\n            }, transferrable);\n        }).catch(err => {\n            console.error(err);\n            postError(type, err, fatal)\n        });\n\n    } else if (type == \"removeCustomMarkers\") {\n        loaded.then(x => {\n            superstate.custom_selections.removeSelection(payload.id);\n        }).catch(err => {\n            console.error(err);\n            postError(type, err, fatal)\n        });\n\n    } else if (type == \"animateTSNE\") {\n        loaded.then(async (x) => {\n            await superstate.tsne.animate();\n            postSuccess(\"tsne\", await superstate.tsne.summary());\n        }).catch(err => {\n            console.error(err);\n            postError(type, err, fatal)\n        });\n\n    } else if (type == \"animateUMAP\") {\n        loaded.then(async (x) => {\n            await superstate.umap.animate();\n            postSuccess(\"umap\", await superstate.umap.summary());\n        }).catch(err => {\n            console.error(err);\n            postError(type, err, fatal)\n        });\n\n    } else if (type == \"getAnnotation\") {\n        loaded.then(x => {\n            let annot = payload.annotation;\n            let vec, result;\n\n            // Filter to match QC unless requested otherwise.\n            if (payload.unfiltered !== false) {\n                vec = superstate.cell_filtering.fetchFilteredAnnotations(annot);\n            } else {\n                vec = superstate.inputs.fetchAnnotations(annot);\n            }\n\n            if (ArrayBuffer.isView(vec)) {\n                result = {\n                    \"type\": \"array\",\n                    \"values\": vec.slice()\n                };\n            } else {\n                let uniq_vals = [];\n                let uniq_map = {};\n                let indices = new Int32Array(vec.length);\n                vec.map((x, i) => {\n                    if (!(x in uniq_map)) {\n                        uniq_map[x] = uniq_vals.length;\n                        uniq_vals.push(x);\n                    }\n                    indices[i] = uniq_map[x];\n                });\n        \n                result = {\n                    \"type\": \"factor\",\n                    \"index\": indices,\n                    \"levels\": uniq_vals\n                };\n            }\n\n            let extracted = [];\n            extractBuffers(result, extracted);\n            postMessage({\n                type: \"setAnnotation\",\n                resp: {\n                    annotation: annot,\n                    values: result\n                },\n                msg: \"Success: GET_ANNOTATION done\"\n            }, extracted);\n        }).catch(err => {\n            console.error(err);\n            postError(type, err, fatal)\n        });\n\n    } else {\n        console.error(\"MIM:::msg type incorrect\")\n        postError(type, \"Type not defined\", fatal)\n    }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = function() {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [373,213], function() { return __webpack_require__(108); })\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = function(chunkId) {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce(function(promises, key) {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + {\"213\":\"f8273c0f\",\"370\":\"3e343e3f\",\"373\":\"b2bf065e\",\"495\":\"6009786c\",\"792\":\"fab7ee9e\"}[chunkId] + \".chunk.js\";\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.miniCssF = function(chunkId) {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/kana/\";","__webpack_require__.b = self.location + \"/../../../\";\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t108: 1\n};\n\n// importScripts chunk loading\nvar installChunk = function(data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = function(chunkId, promises) {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunkkana\"] = self[\"webpackChunkkana\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","var next = __webpack_require__.x;\n__webpack_require__.x = function() {\n\treturn Promise.all([\n\t\t__webpack_require__.e(373),\n\t\t__webpack_require__.e(213)\n\t]).then(next);\n};","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n"],"names":["kanaDB","DownloadsDB","init","getRecordsResolver","resolve","store","result","transaction","objectStore","allAnalysis","getAll","onsuccess","vals","forEach","x","files","onerror","loadContent","id","Promise","request","get","undefined","allOK","promises","allSettled","then","getRecords","saveFile","buffer","trans","file_store","meta_store","meta","refcount","data_saving","putrequest","put","event","ref_saving","count","saveAnalysis","state","title","analysis_store","already","String","length","id_saving","Number","Date","removeFile","push","remove","delete","f","url","params","force","download_store","data_check","payload","found","req","fetch","res","ok","status","arrayBuffer","extractBuffers","object","Array","isArray","constructor","Object","entries","ArrayBuffer","isView","postAttempt","step","postMessage","type","postSuccess","info","transferable","resp","loaded","superstate","linkKanaDb","collected","name","hashwasm","Uint8Array","md5","byteLength","kana_db","serializeAllSteps","embedded","h5path","old","bakana","output","unserializeAllSteps","contents","loader","finishFun","response","parameters","inputs","sample_factor","qc","quality_control","use_mito_default","mito_prefix","nmads","fSelection","feature_selection","span","pca","num_hvgs","num_pcs","block_method","cluster","kmeans_cluster","k","snn_graph_cluster","scheme","resolution","choose_clustering","method","tsne","perplexity","iterations","animate","umap","num_epochs","num_neighbors","min_dist","annotateCells","cell_labelling","human_references","mouse_references","custom_selections","adt_qualitycontrol","adt_quality_control","adt_pca","adt_normalization","combine_embeddings","batch_correction","postError","err","fatal","reason","toString","y","iter","iteration","onmessage","msg","data","nthreads","Math","round","navigator","hardwareConcurrency","back_init","numberOfThreads","state_init","kana_init","indexedDB","open","onupgradeneeded","e","kanaDBClient","target","deleteObjectStore","createObjectStore","keyPath","console","error","down_init","reject","DownloadsDBClient","catch","all","formatted","batch","normalization","neighbor_index","markers","custom_markers","ann","weights","Set","values","size","log","startFun","runAllSteps","fs","keys","format","file","reader","FileReaderSync","readAsArrayBuffer","recs","details","rank_type","modality","marker_detection","fetchGroupResults","transferrable","vec","row_idx","gene","toLowerCase","fetchExpression","Error","expr","addSelection","selection","replace","fetchResults","removeSelection","summary","annot","annotation","unfiltered","cell_filtering","fetchFilteredAnnotations","fetchAnnotations","slice","uniq_vals","uniq_map","indices","Int32Array","map","i","extracted","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","__webpack_exports__","O","deferred","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","every","key","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","chunkId","reduce","u","miniCssF","g","globalThis","this","Function","window","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","value","p","b","self","location","installedChunks","importScripts","chunkLoadingGlobal","parentChunkLoadingFunction","bind","moreModules","runtime","pop","next"],"sourceRoot":""}